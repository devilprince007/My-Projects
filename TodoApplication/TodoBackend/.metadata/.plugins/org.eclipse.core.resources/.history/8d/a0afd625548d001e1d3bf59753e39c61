package com.app.todo.security;

import java.security.Key;
import java.util.Date;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Component
public class JwtTokenProvider {
	
	@Value("${app.jwt.secret}")
	private String jwtSecret;
	
	@Value("${app.jet-expiration-milliseconds}")
	private long jwtExpirationDate;
	
	//Generate JWT Token	
	public String generateToken(Authentication authentication) {
		String username = authentication.getName();
		
		Date currentDate = new Date();
		Date expireDate =  new Date(currentDate.getTime() + jwtExpirationDate);
		
		String token =  Jwts.builder()
							.setSubject(username)
							.setIssuedAt(new Date())
							.setExpiration(expireDate)
							.signWith(key())
							.compact();
		return token;
	}
	
	private Key key() {
		return Keys.hmacShaKeyFor( Decoders.BASE64.decode(jwtSecret) );
	}
	
	//return username from jwt token
	public String getUsername(String token) {
		Claims claim =  Jwts.parser()
							.setSigningKey(key())
							.build()
							.parseClaimsJwt(token)
							.getBody();
		
		String username = claim.getSubject();
		return username;
	}
}
